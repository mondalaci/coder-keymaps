#!/usr/bin/env python

import os
import sys

version = '0.4.2'

# print functions

def print_version():
    print 'chmap ' + version

def print_help():
    print 'Usage: chmap [-i]'
    print 'Rotate xmodmap keyboard maps according to the configuration file.'
    print '  -i  Initialize the first map in the configuration file.'

# helper functions

def get_configfile_name():
    config_file = 'chmap-keymap-list.conf'
    config_paths= [
        '~/.coder-keymaps/',
        '/usr/local/etc/',
        '/etc/'
    ]

    for config_path in config_paths:
        expanded_path = os.path.expanduser(config_path)
        filename = os.path.join(expanded_path, config_file)

        if os.access(filename, os.R_OK):
            return filename

    print 'Could not find the configuration file in any of the predefined paths:'

    for config_path in config_paths:
        print ' '*4 + config_path

    sys.exit(1)

def get_current_map_filename():
    filename = '/tmp/coder-keymaps-' + os.environ['USER']
    return filename

# second level functions

def get_current_map():
    filename = get_current_map_filename()

    if os.path.isfile(filename):
        file = open(filename)
        map = file.readline().strip()
        file.close()
        return map

def get_maps():
    config_filename = get_configfile_name()
    config_file = open(config_filename)
    maps = config_file.readlines()
    config_file.close()
    maps = [map.strip() for map in maps]
    return maps

def advance_map(current_map, maps):
    try:
        i = maps.index(current_map) + 1
    except:
        i = 0

    if i >= len(maps):
        i = 0

    return maps[i]

def change_map(map):
    share_paths= [
        '~/.coder-keymaps/',
        '/usr/local/share/coder-keymaps/',
        '/usr/share/coder-keymaps/'
    ]

    for share_path in share_paths:
        map_path = os.path.join(share_path, 'keymaps', map)
        map_path = os.path.expanduser(map_path)

        if os.access(map_path, os.R_OK):
            os.spawnlp(os.P_NOWAIT, 'xmodmap', 'xmodmap', map_path)
            return

    print 'Could not find the map file "' + map + " in any of the directories:"

    for share_path in share_paths:
        map_path = os.path.join(share_path,'keymaps')
        print ' '*4 + map_path

    sys.exit(1)

def set_map(map):
    print 'Changing to map "' + map + '".'

    filename = get_current_map_filename()
    file = open(filename, 'w')
    file.write(map)
    file.close()

# top level functions

def parse_args():
    init = False

    if len(sys.argv) == 2:
        arg = sys.argv[1]

        if arg == '-h' or arg == '--help':
            print_version()
            print_help()
            sys.exit()

        if arg == '-v' or arg == '--version':
            print_version()
            sys.exit()

        if arg == '-i':
            init = True

    return init

def main(init):
    current_map = get_current_map()
    maps = get_maps()

    if not current_map or init:
        new_map = maps[0]  # initiate map
    else:
        new_map = advance_map(current_map, maps)

    change_map(new_map)
    set_map(new_map)


if __name__ == '__main__':
    init = parse_args()
    main(init)
